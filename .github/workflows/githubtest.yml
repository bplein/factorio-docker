name: Docker-Publish-Github-test

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    branches: [ "master" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "master" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write


    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.13.1'


#      # Workaround: https://github.com/docker/build-push-action/issues/461
#      - name: Setup Docker buildx
#        uses: docker/setup-buildx-action@v2


      - name: Extract all versions from buildinfo.json
        id: get-version
        run: |
          VERSION=$(cat buildinfo.json | jq -r '.[] | .tags | select( index("latest"))|.[0]')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAGS=$(cat buildinfo.json | jq -r '.[] | .tags | select( index("latest"))|.[]')" >> $GITHUB_ENV
#          echo "$GITHUB_ENV"
#          echo "${{ env.VERSION }}"
      - name: Show versions and tags
        run: |
          echo "${{ env.VERSION }}" # This will output VERSION
          echo "${{ env.action_state }}" # This will output 'yellow'
          echo "Tags: ${{ env.TAGS }}"
          
